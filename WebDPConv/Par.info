-----------------------------------------------------------------------------
Info file generated by Happy Version 1.20.1.1 from WebDPConv/Par.y
-----------------------------------------------------------------------------


-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_pProg -> Prog                               (0)
	%start_pQuery -> Query                             (1)
	%start_pDatasetId -> DatasetId                     (2)
	%start_pBudget -> Budget                           (3)
	%start_pStringList -> StringList                   (4)
	%start_pQueryStep -> QueryStep                     (5)
	%start_pDataType -> DataType                       (6)
	%start_pValue -> Value                             (7)
	%start_pMParam -> MParam                           (8)
	%start_pNoiseM -> NoiseM                           (9)
	%start_pBinMap -> BinMap                           (10)
	%start_pColumnSchema -> ColumnSchema               (11)
	%start_pListQueryStep -> ListQueryStep             (12)
	%start_pListString -> ListString                   (13)
	%start_pListColumnSchema -> ListColumnSchema       (14)
	%start_pListBinMap -> ListBinMap                   (15)
	%start_pListValue -> ListValue                     (16)
	%start_pListQuery -> ListQuery                     (17)
	%start_pListIdent -> ListIdent                     (18)
	Ident -> L_Ident                                   (19)
	Double -> L_doubl                                  (20)
	Integer -> L_integ                                 (21)
	String -> L_quoted                                 (22)
	Prog -> ListQuery                                  (23)
	Query -> Ident DatasetId Budget '=' '(' ListQueryStep ')'   (24)
	DatasetId -> Integer                               (25)
	Budget -> Double                                   (26)
	Budget -> Double Double                            (27)
	StringList -> '[' ListString ']'                   (28)
	QueryStep -> 'SELECT' StringList                   (29)
	QueryStep -> 'RENAME' StringList 'TO' StringList   (30)
	QueryStep -> 'FILTER' StringList                   (31)
	QueryStep -> 'MAP' String '[' ListColumnSchema ']'   (32)
	QueryStep -> 'BIN' '[' ListBinMap ']'              (33)
	QueryStep -> 'COUNT' MParam                        (34)
	QueryStep -> 'MIN' MParam                          (35)
	QueryStep -> 'MAX' MParam                          (36)
	QueryStep -> 'SUM' MParam                          (37)
	QueryStep -> 'MEAN' MParam                         (38)
	DataType -> 'Bool'                                 (39)
	DataType -> 'Int' Integer Integer                  (40)
	DataType -> 'Double' Double Double                 (41)
	DataType -> 'Text'                                 (42)
	DataType -> 'Enum' StringList                      (43)
	Value -> 'true'                                    (44)
	Value -> 'false'                                   (45)
	Value -> Integer                                   (46)
	Value -> Double                                    (47)
	MParam -> String NoiseM Budget                     (48)
	NoiseM -> 'Gauss'                                  (49)
	NoiseM -> 'Laplace'                                (50)
	BinMap -> String '[' ListValue ']'                 (51)
	ColumnSchema -> String DataType                    (52)
	ListQueryStep ->                                   (53)
	ListQueryStep -> QueryStep ';' ListQueryStep       (54)
	ListString ->                                      (55)
	ListString -> String                               (56)
	ListString -> String ',' ListString                (57)
	ListColumnSchema ->                                (58)
	ListColumnSchema -> ColumnSchema                   (59)
	ListColumnSchema -> ColumnSchema ',' ListColumnSchema   (60)
	ListBinMap ->                                      (61)
	ListBinMap -> BinMap                               (62)
	ListBinMap -> BinMap ',' ListBinMap                (63)
	ListValue ->                                       (64)
	ListValue -> Value                                 (65)
	ListValue -> Value ',' ListValue                   (66)
	ListQuery ->                                       (67)
	ListQuery -> Query ListQuery                       (68)
	ListIdent ->                                       (69)
	ListIdent -> Ident                                 (70)
	ListIdent -> Ident ',' ListIdent                   (71)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	'('            { PT _ (TS _ 1) }
	')'            { PT _ (TS _ 2) }
	','            { PT _ (TS _ 3) }
	';'            { PT _ (TS _ 4) }
	'='            { PT _ (TS _ 5) }
	'BIN'          { PT _ (TS _ 6) }
	'Bool'         { PT _ (TS _ 7) }
	'COUNT'        { PT _ (TS _ 8) }
	'Double'       { PT _ (TS _ 9) }
	'Enum'         { PT _ (TS _ 10) }
	'FILTER'       { PT _ (TS _ 11) }
	'Gauss'        { PT _ (TS _ 12) }
	'Int'          { PT _ (TS _ 13) }
	'Laplace'      { PT _ (TS _ 14) }
	'MAP'          { PT _ (TS _ 15) }
	'MAX'          { PT _ (TS _ 16) }
	'MEAN'         { PT _ (TS _ 17) }
	'MIN'          { PT _ (TS _ 18) }
	'RENAME'       { PT _ (TS _ 19) }
	'SELECT'       { PT _ (TS _ 20) }
	'SUM'          { PT _ (TS _ 21) }
	'TO'           { PT _ (TS _ 22) }
	'Text'         { PT _ (TS _ 23) }
	'['            { PT _ (TS _ 24) }
	']'            { PT _ (TS _ 25) }
	'false'        { PT _ (TS _ 26) }
	'true'         { PT _ (TS _ 27) }
	L_Ident        { PT _ (TV $$) }
	L_doubl        { PT _ (TD $$) }
	L_integ        { PT _ (TI $$) }
	L_quoted       { PT _ (TL $$) }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_pProg    rule  0
	%start_pQuery   rule  1
	%start_pDatasetId rule  2
	%start_pBudget  rule  3
	%start_pStringList rule  4
	%start_pQueryStep rule  5
	%start_pDataType rule  6
	%start_pValue   rule  7
	%start_pMParam  rule  8
	%start_pNoiseM  rule  9
	%start_pBinMap  rule  10
	%start_pColumnSchema rule  11
	%start_pListQueryStep rule  12
	%start_pListString rule  13
	%start_pListColumnSchema rule  14
	%start_pListBinMap rule  15
	%start_pListValue rule  16
	%start_pListQuery rule  17
	%start_pListIdent rule  18
	Ident           rule  19
	Double          rule  20
	Integer         rule  21
	String          rule  22
	Prog            rule  23
	Query           rule  24
	DatasetId       rule  25
	Budget          rules 26, 27
	StringList      rule  28
	QueryStep       rules 29, 30, 31, 32, 33, 34, 35, 36, 37, 38
	DataType        rules 39, 40, 41, 42, 43
	Value           rules 44, 45, 46, 47
	MParam          rule  48
	NoiseM          rules 49, 50
	BinMap          rule  51
	ColumnSchema    rule  52
	ListQueryStep   rules 53, 54
	ListString      rules 55, 56, 57
	ListColumnSchema rules 58, 59, 60
	ListBinMap      rules 61, 62, 63
	ListValue       rules 64, 65, 66
	ListQuery       rules 67, 68
	ListIdent       rules 69, 70, 71

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0

	%start_pProg -> . Prog                              (rule 0)

	L_Ident        shift, and enter state 20
	%eof           reduce using rule 67

	Ident          goto state 23
	Prog           goto state 77
	Query          goto state 24
	ListQuery      goto state 78

State 1

	%start_pQuery -> . Query                            (rule 1)

	L_Ident        shift, and enter state 20

	Ident          goto state 23
	Query          goto state 76

State 2

	%start_pDatasetId -> . DatasetId                    (rule 2)

	L_integ        shift, and enter state 33

	Integer        goto state 74
	DatasetId      goto state 75

State 3

	%start_pBudget -> . Budget                          (rule 3)

	L_doubl        shift, and enter state 32

	Double         goto state 72
	Budget         goto state 73

State 4

	%start_pStringList -> . StringList                  (rule 4)

	'['            shift, and enter state 71

	StringList     goto state 70

State 5

	%start_pQueryStep -> . QueryStep                    (rule 5)

	'BIN'          shift, and enter state 45
	'COUNT'        shift, and enter state 46
	'FILTER'       shift, and enter state 47
	'MAP'          shift, and enter state 48
	'MAX'          shift, and enter state 49
	'MEAN'         shift, and enter state 50
	'MIN'          shift, and enter state 51
	'RENAME'       shift, and enter state 52
	'SELECT'       shift, and enter state 53
	'SUM'          shift, and enter state 54

	QueryStep      goto state 69

State 6

	%start_pDataType -> . DataType                      (rule 6)

	'Bool'         shift, and enter state 64
	'Double'       shift, and enter state 65
	'Enum'         shift, and enter state 66
	'Int'          shift, and enter state 67
	'Text'         shift, and enter state 68

	DataType       goto state 63

State 7

	%start_pValue -> . Value                            (rule 7)

	'false'        shift, and enter state 30
	'true'         shift, and enter state 31
	L_doubl        shift, and enter state 32
	L_integ        shift, and enter state 33

	Double         goto state 26
	Integer        goto state 27
	Value          goto state 62

State 8

	%start_pMParam -> . MParam                          (rule 8)

	L_quoted       shift, and enter state 37

	String         goto state 60
	MParam         goto state 61

State 9

	%start_pNoiseM -> . NoiseM                          (rule 9)

	'Gauss'        shift, and enter state 58
	'Laplace'      shift, and enter state 59

	NoiseM         goto state 57

State 10

	%start_pBinMap -> . BinMap                          (rule 10)

	L_quoted       shift, and enter state 37

	String         goto state 34
	BinMap         goto state 56

State 11

	%start_pColumnSchema -> . ColumnSchema              (rule 11)

	L_quoted       shift, and enter state 37

	String         goto state 38
	ColumnSchema   goto state 55

State 12

	%start_pListQueryStep -> . ListQueryStep            (rule 12)

	'BIN'          shift, and enter state 45
	'COUNT'        shift, and enter state 46
	'FILTER'       shift, and enter state 47
	'MAP'          shift, and enter state 48
	'MAX'          shift, and enter state 49
	'MEAN'         shift, and enter state 50
	'MIN'          shift, and enter state 51
	'RENAME'       shift, and enter state 52
	'SELECT'       shift, and enter state 53
	'SUM'          shift, and enter state 54
	%eof           reduce using rule 53

	QueryStep      goto state 43
	ListQueryStep  goto state 44

State 13

	%start_pListString -> . ListString                  (rule 13)

	L_quoted       shift, and enter state 37
	%eof           reduce using rule 55

	String         goto state 41
	ListString     goto state 42

State 14

	%start_pListColumnSchema -> . ListColumnSchema      (rule 14)

	L_quoted       shift, and enter state 37
	%eof           reduce using rule 58

	String         goto state 38
	ColumnSchema   goto state 39
	ListColumnSchemagoto state 40

State 15

	%start_pListBinMap -> . ListBinMap                  (rule 15)

	L_quoted       shift, and enter state 37
	%eof           reduce using rule 61

	String         goto state 34
	BinMap         goto state 35
	ListBinMap     goto state 36

State 16

	%start_pListValue -> . ListValue                    (rule 16)

	'false'        shift, and enter state 30
	'true'         shift, and enter state 31
	L_doubl        shift, and enter state 32
	L_integ        shift, and enter state 33
	%eof           reduce using rule 64

	Double         goto state 26
	Integer        goto state 27
	Value          goto state 28
	ListValue      goto state 29

State 17

	%start_pListQuery -> . ListQuery                    (rule 17)

	L_Ident        shift, and enter state 20
	%eof           reduce using rule 67

	Ident          goto state 23
	Query          goto state 24
	ListQuery      goto state 25

State 18

	%start_pListIdent -> . ListIdent                    (rule 18)

	L_Ident        shift, and enter state 20
	%eof           reduce using rule 69

	Ident          goto state 21
	ListIdent      goto state 22

State 19

	Ident -> . L_Ident                                  (rule 19)

	L_Ident        shift, and enter state 20


State 20

	Ident -> L_Ident .                                  (rule 19)

	','            reduce using rule 19
	L_integ        reduce using rule 19
	%eof           reduce using rule 19


State 21

	ListIdent -> Ident .                                (rule 70)
	ListIdent -> Ident . ',' ListIdent                  (rule 71)

	','            shift, and enter state 104
	%eof           reduce using rule 70


State 22

	%start_pListIdent -> ListIdent .                    (rule 18)

	%eof           accept


State 23

	Query -> Ident . DatasetId Budget '=' '(' ListQueryStep ')'    (rule 24)

	L_integ        shift, and enter state 33

	Integer        goto state 74
	DatasetId      goto state 103

State 24

	ListQuery -> Query . ListQuery                      (rule 68)

	L_Ident        shift, and enter state 20
	%eof           reduce using rule 67

	Ident          goto state 23
	Query          goto state 24
	ListQuery      goto state 102

State 25

	%start_pListQuery -> ListQuery .                    (rule 17)

	%eof           accept


State 26

	Value -> Double .                                   (rule 47)

	','            reduce using rule 47
	']'            reduce using rule 47
	%eof           reduce using rule 47


State 27

	Value -> Integer .                                  (rule 46)

	','            reduce using rule 46
	']'            reduce using rule 46
	%eof           reduce using rule 46


State 28

	ListValue -> Value .                                (rule 65)
	ListValue -> Value . ',' ListValue                  (rule 66)

	','            shift, and enter state 101
	']'            reduce using rule 65
	%eof           reduce using rule 65


State 29

	%start_pListValue -> ListValue .                    (rule 16)

	%eof           accept


State 30

	Value -> 'false' .                                  (rule 45)

	','            reduce using rule 45
	']'            reduce using rule 45
	%eof           reduce using rule 45


State 31

	Value -> 'true' .                                   (rule 44)

	','            reduce using rule 44
	']'            reduce using rule 44
	%eof           reduce using rule 44


State 32

	Double -> L_doubl .                                 (rule 20)

	','            reduce using rule 20
	';'            reduce using rule 20
	'='            reduce using rule 20
	']'            reduce using rule 20
	L_doubl        reduce using rule 20
	%eof           reduce using rule 20


State 33

	Integer -> L_integ .                                (rule 21)

	','            reduce using rule 21
	']'            reduce using rule 21
	L_doubl        reduce using rule 21
	L_integ        reduce using rule 21
	%eof           reduce using rule 21


State 34

	BinMap -> String . '[' ListValue ']'                (rule 51)

	'['            shift, and enter state 100


State 35

	ListBinMap -> BinMap .                              (rule 62)
	ListBinMap -> BinMap . ',' ListBinMap               (rule 63)

	','            shift, and enter state 99
	']'            reduce using rule 62
	%eof           reduce using rule 62


State 36

	%start_pListBinMap -> ListBinMap .                  (rule 15)

	%eof           accept


State 37

	String -> L_quoted .                                (rule 22)

	','            reduce using rule 22
	'Bool'         reduce using rule 22
	'Double'       reduce using rule 22
	'Enum'         reduce using rule 22
	'Gauss'        reduce using rule 22
	'Int'          reduce using rule 22
	'Laplace'      reduce using rule 22
	'Text'         reduce using rule 22
	'['            reduce using rule 22
	']'            reduce using rule 22
	%eof           reduce using rule 22


State 38

	ColumnSchema -> String . DataType                   (rule 52)

	'Bool'         shift, and enter state 64
	'Double'       shift, and enter state 65
	'Enum'         shift, and enter state 66
	'Int'          shift, and enter state 67
	'Text'         shift, and enter state 68

	DataType       goto state 98

State 39

	ListColumnSchema -> ColumnSchema .                  (rule 59)
	ListColumnSchema -> ColumnSchema . ',' ListColumnSchema    (rule 60)

	','            shift, and enter state 97
	']'            reduce using rule 59
	%eof           reduce using rule 59


State 40

	%start_pListColumnSchema -> ListColumnSchema .      (rule 14)

	%eof           accept


State 41

	ListString -> String .                              (rule 56)
	ListString -> String . ',' ListString               (rule 57)

	','            shift, and enter state 96
	']'            reduce using rule 56
	%eof           reduce using rule 56


State 42

	%start_pListString -> ListString .                  (rule 13)

	%eof           accept


State 43

	ListQueryStep -> QueryStep . ';' ListQueryStep      (rule 54)

	';'            shift, and enter state 95


State 44

	%start_pListQueryStep -> ListQueryStep .            (rule 12)

	%eof           accept


State 45

	QueryStep -> 'BIN' . '[' ListBinMap ']'             (rule 33)

	'['            shift, and enter state 94


State 46

	QueryStep -> 'COUNT' . MParam                       (rule 34)

	L_quoted       shift, and enter state 37

	String         goto state 60
	MParam         goto state 93

State 47

	QueryStep -> 'FILTER' . StringList                  (rule 31)

	'['            shift, and enter state 71

	StringList     goto state 92

State 48

	QueryStep -> 'MAP' . String '[' ListColumnSchema ']'    (rule 32)

	L_quoted       shift, and enter state 37

	String         goto state 91

State 49

	QueryStep -> 'MAX' . MParam                         (rule 36)

	L_quoted       shift, and enter state 37

	String         goto state 60
	MParam         goto state 90

State 50

	QueryStep -> 'MEAN' . MParam                        (rule 38)

	L_quoted       shift, and enter state 37

	String         goto state 60
	MParam         goto state 89

State 51

	QueryStep -> 'MIN' . MParam                         (rule 35)

	L_quoted       shift, and enter state 37

	String         goto state 60
	MParam         goto state 88

State 52

	QueryStep -> 'RENAME' . StringList 'TO' StringList    (rule 30)

	'['            shift, and enter state 71

	StringList     goto state 87

State 53

	QueryStep -> 'SELECT' . StringList                  (rule 29)

	'['            shift, and enter state 71

	StringList     goto state 86

State 54

	QueryStep -> 'SUM' . MParam                         (rule 37)

	L_quoted       shift, and enter state 37

	String         goto state 60
	MParam         goto state 85

State 55

	%start_pColumnSchema -> ColumnSchema .              (rule 11)

	%eof           accept


State 56

	%start_pBinMap -> BinMap .                          (rule 10)

	%eof           accept


State 57

	%start_pNoiseM -> NoiseM .                          (rule 9)

	%eof           accept


State 58

	NoiseM -> 'Gauss' .                                 (rule 49)

	L_doubl        reduce using rule 49
	%eof           reduce using rule 49


State 59

	NoiseM -> 'Laplace' .                               (rule 50)

	L_doubl        reduce using rule 50
	%eof           reduce using rule 50


State 60

	MParam -> String . NoiseM Budget                    (rule 48)

	'Gauss'        shift, and enter state 58
	'Laplace'      shift, and enter state 59

	NoiseM         goto state 84

State 61

	%start_pMParam -> MParam .                          (rule 8)

	%eof           accept


State 62

	%start_pValue -> Value .                            (rule 7)

	%eof           accept


State 63

	%start_pDataType -> DataType .                      (rule 6)

	%eof           accept


State 64

	DataType -> 'Bool' .                                (rule 39)

	','            reduce using rule 39
	']'            reduce using rule 39
	%eof           reduce using rule 39


State 65

	DataType -> 'Double' . Double Double                (rule 41)

	L_doubl        shift, and enter state 32

	Double         goto state 83

State 66

	DataType -> 'Enum' . StringList                     (rule 43)

	'['            shift, and enter state 71

	StringList     goto state 82

State 67

	DataType -> 'Int' . Integer Integer                 (rule 40)

	L_integ        shift, and enter state 33

	Integer        goto state 81

State 68

	DataType -> 'Text' .                                (rule 42)

	','            reduce using rule 42
	']'            reduce using rule 42
	%eof           reduce using rule 42


State 69

	%start_pQueryStep -> QueryStep .                    (rule 5)

	%eof           accept


State 70

	%start_pStringList -> StringList .                  (rule 4)

	%eof           accept


State 71

	StringList -> '[' . ListString ']'                  (rule 28)

	']'            reduce using rule 55
	L_quoted       shift, and enter state 37

	String         goto state 41
	ListString     goto state 80

State 72

	Budget -> Double .                                  (rule 26)
	Budget -> Double . Double                           (rule 27)

	';'            reduce using rule 26
	'='            reduce using rule 26
	L_doubl        shift, and enter state 32
	%eof           reduce using rule 26

	Double         goto state 79

State 73

	%start_pBudget -> Budget .                          (rule 3)

	%eof           accept


State 74

	DatasetId -> Integer .                              (rule 25)

	L_doubl        reduce using rule 25
	%eof           reduce using rule 25


State 75

	%start_pDatasetId -> DatasetId .                    (rule 2)

	%eof           accept


State 76

	%start_pQuery -> Query .                            (rule 1)

	%eof           accept


State 77

	%start_pProg -> Prog .                              (rule 0)

	%eof           accept


State 78

	Prog -> ListQuery .                                 (rule 23)

	%eof           reduce using rule 23


State 79

	Budget -> Double Double .                           (rule 27)

	';'            reduce using rule 27
	'='            reduce using rule 27
	%eof           reduce using rule 27


State 80

	StringList -> '[' ListString . ']'                  (rule 28)

	']'            shift, and enter state 119


State 81

	DataType -> 'Int' Integer . Integer                 (rule 40)

	L_integ        shift, and enter state 33

	Integer        goto state 118

State 82

	DataType -> 'Enum' StringList .                     (rule 43)

	','            reduce using rule 43
	']'            reduce using rule 43
	%eof           reduce using rule 43


State 83

	DataType -> 'Double' Double . Double                (rule 41)

	L_doubl        shift, and enter state 32

	Double         goto state 117

State 84

	MParam -> String NoiseM . Budget                    (rule 48)

	L_doubl        shift, and enter state 32

	Double         goto state 72
	Budget         goto state 116

State 85

	QueryStep -> 'SUM' MParam .                         (rule 37)

	';'            reduce using rule 37
	%eof           reduce using rule 37


State 86

	QueryStep -> 'SELECT' StringList .                  (rule 29)

	';'            reduce using rule 29
	%eof           reduce using rule 29


State 87

	QueryStep -> 'RENAME' StringList . 'TO' StringList    (rule 30)

	'TO'           shift, and enter state 115


State 88

	QueryStep -> 'MIN' MParam .                         (rule 35)

	';'            reduce using rule 35
	%eof           reduce using rule 35


State 89

	QueryStep -> 'MEAN' MParam .                        (rule 38)

	';'            reduce using rule 38
	%eof           reduce using rule 38


State 90

	QueryStep -> 'MAX' MParam .                         (rule 36)

	';'            reduce using rule 36
	%eof           reduce using rule 36


State 91

	QueryStep -> 'MAP' String . '[' ListColumnSchema ']'    (rule 32)

	'['            shift, and enter state 114


State 92

	QueryStep -> 'FILTER' StringList .                  (rule 31)

	';'            reduce using rule 31
	%eof           reduce using rule 31


State 93

	QueryStep -> 'COUNT' MParam .                       (rule 34)

	';'            reduce using rule 34
	%eof           reduce using rule 34


State 94

	QueryStep -> 'BIN' '[' . ListBinMap ']'             (rule 33)

	']'            reduce using rule 61
	L_quoted       shift, and enter state 37

	String         goto state 34
	BinMap         goto state 35
	ListBinMap     goto state 113

State 95

	ListQueryStep -> QueryStep ';' . ListQueryStep      (rule 54)

	')'            reduce using rule 53
	'BIN'          shift, and enter state 45
	'COUNT'        shift, and enter state 46
	'FILTER'       shift, and enter state 47
	'MAP'          shift, and enter state 48
	'MAX'          shift, and enter state 49
	'MEAN'         shift, and enter state 50
	'MIN'          shift, and enter state 51
	'RENAME'       shift, and enter state 52
	'SELECT'       shift, and enter state 53
	'SUM'          shift, and enter state 54
	%eof           reduce using rule 53

	QueryStep      goto state 43
	ListQueryStep  goto state 112

State 96

	ListString -> String ',' . ListString               (rule 57)

	']'            reduce using rule 55
	L_quoted       shift, and enter state 37
	%eof           reduce using rule 55

	String         goto state 41
	ListString     goto state 111

State 97

	ListColumnSchema -> ColumnSchema ',' . ListColumnSchema    (rule 60)

	']'            reduce using rule 58
	L_quoted       shift, and enter state 37
	%eof           reduce using rule 58

	String         goto state 38
	ColumnSchema   goto state 39
	ListColumnSchemagoto state 110

State 98

	ColumnSchema -> String DataType .                   (rule 52)

	','            reduce using rule 52
	']'            reduce using rule 52
	%eof           reduce using rule 52


State 99

	ListBinMap -> BinMap ',' . ListBinMap               (rule 63)

	']'            reduce using rule 61
	L_quoted       shift, and enter state 37
	%eof           reduce using rule 61

	String         goto state 34
	BinMap         goto state 35
	ListBinMap     goto state 109

State 100

	BinMap -> String '[' . ListValue ']'                (rule 51)

	']'            reduce using rule 64
	'false'        shift, and enter state 30
	'true'         shift, and enter state 31
	L_doubl        shift, and enter state 32
	L_integ        shift, and enter state 33

	Double         goto state 26
	Integer        goto state 27
	Value          goto state 28
	ListValue      goto state 108

State 101

	ListValue -> Value ',' . ListValue                  (rule 66)

	']'            reduce using rule 64
	'false'        shift, and enter state 30
	'true'         shift, and enter state 31
	L_doubl        shift, and enter state 32
	L_integ        shift, and enter state 33
	%eof           reduce using rule 64

	Double         goto state 26
	Integer        goto state 27
	Value          goto state 28
	ListValue      goto state 107

State 102

	ListQuery -> Query ListQuery .                      (rule 68)

	%eof           reduce using rule 68


State 103

	Query -> Ident DatasetId . Budget '=' '(' ListQueryStep ')'    (rule 24)

	L_doubl        shift, and enter state 32

	Double         goto state 72
	Budget         goto state 106

State 104

	ListIdent -> Ident ',' . ListIdent                  (rule 71)

	L_Ident        shift, and enter state 20
	%eof           reduce using rule 69

	Ident          goto state 21
	ListIdent      goto state 105

State 105

	ListIdent -> Ident ',' ListIdent .                  (rule 71)

	%eof           reduce using rule 71


State 106

	Query -> Ident DatasetId Budget . '=' '(' ListQueryStep ')'    (rule 24)

	'='            shift, and enter state 124


State 107

	ListValue -> Value ',' ListValue .                  (rule 66)

	']'            reduce using rule 66
	%eof           reduce using rule 66


State 108

	BinMap -> String '[' ListValue . ']'                (rule 51)

	']'            shift, and enter state 123


State 109

	ListBinMap -> BinMap ',' ListBinMap .               (rule 63)

	']'            reduce using rule 63
	%eof           reduce using rule 63


State 110

	ListColumnSchema -> ColumnSchema ',' ListColumnSchema .    (rule 60)

	']'            reduce using rule 60
	%eof           reduce using rule 60


State 111

	ListString -> String ',' ListString .               (rule 57)

	']'            reduce using rule 57
	%eof           reduce using rule 57


State 112

	ListQueryStep -> QueryStep ';' ListQueryStep .      (rule 54)

	')'            reduce using rule 54
	%eof           reduce using rule 54


State 113

	QueryStep -> 'BIN' '[' ListBinMap . ']'             (rule 33)

	']'            shift, and enter state 122


State 114

	QueryStep -> 'MAP' String '[' . ListColumnSchema ']'    (rule 32)

	']'            reduce using rule 58
	L_quoted       shift, and enter state 37

	String         goto state 38
	ColumnSchema   goto state 39
	ListColumnSchemagoto state 121

State 115

	QueryStep -> 'RENAME' StringList 'TO' . StringList    (rule 30)

	'['            shift, and enter state 71

	StringList     goto state 120

State 116

	MParam -> String NoiseM Budget .                    (rule 48)

	';'            reduce using rule 48
	%eof           reduce using rule 48


State 117

	DataType -> 'Double' Double Double .                (rule 41)

	','            reduce using rule 41
	']'            reduce using rule 41
	%eof           reduce using rule 41


State 118

	DataType -> 'Int' Integer Integer .                 (rule 40)

	','            reduce using rule 40
	']'            reduce using rule 40
	%eof           reduce using rule 40


State 119

	StringList -> '[' ListString ']' .                  (rule 28)

	','            reduce using rule 28
	';'            reduce using rule 28
	'TO'           reduce using rule 28
	']'            reduce using rule 28
	%eof           reduce using rule 28


State 120

	QueryStep -> 'RENAME' StringList 'TO' StringList .    (rule 30)

	';'            reduce using rule 30
	%eof           reduce using rule 30


State 121

	QueryStep -> 'MAP' String '[' ListColumnSchema . ']'    (rule 32)

	']'            shift, and enter state 126


State 122

	QueryStep -> 'BIN' '[' ListBinMap ']' .             (rule 33)

	';'            reduce using rule 33
	%eof           reduce using rule 33


State 123

	BinMap -> String '[' ListValue ']' .                (rule 51)

	','            reduce using rule 51
	']'            reduce using rule 51
	%eof           reduce using rule 51


State 124

	Query -> Ident DatasetId Budget '=' . '(' ListQueryStep ')'    (rule 24)

	'('            shift, and enter state 125


State 125

	Query -> Ident DatasetId Budget '=' '(' . ListQueryStep ')'    (rule 24)

	')'            reduce using rule 53
	'BIN'          shift, and enter state 45
	'COUNT'        shift, and enter state 46
	'FILTER'       shift, and enter state 47
	'MAP'          shift, and enter state 48
	'MAX'          shift, and enter state 49
	'MEAN'         shift, and enter state 50
	'MIN'          shift, and enter state 51
	'RENAME'       shift, and enter state 52
	'SELECT'       shift, and enter state 53
	'SUM'          shift, and enter state 54

	QueryStep      goto state 43
	ListQueryStep  goto state 127

State 126

	QueryStep -> 'MAP' String '[' ListColumnSchema ']' .    (rule 32)

	';'            reduce using rule 32
	%eof           reduce using rule 32


State 127

	Query -> Ident DatasetId Budget '=' '(' ListQueryStep . ')'    (rule 24)

	')'            shift, and enter state 128


State 128

	Query -> Ident DatasetId Budget '=' '(' ListQueryStep ')' .    (rule 24)

	L_Ident        reduce using rule 24
	%eof           reduce using rule 24


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 72
Number of terminals: 31
Number of non-terminals: 42
Number of states: 129
